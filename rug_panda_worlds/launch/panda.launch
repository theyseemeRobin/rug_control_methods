<?xml version="1.0"?>
<launch>

    <!-- Gazebo & GUI Configuration -->
    <arg name="gazebo"     default="true"               doc="Should the gazebo simulation be launched? Use false in case if you want to include this file and launch gazebo yourself" />
    <arg name="headless"   default="false"              doc="Should the gazebo GUI be launched?" />
    <arg name="paused"     default="false"              doc="Should the simulation directly be stopped at 0s?" />
    <arg name="world"      default="worlds/empty.world" doc="Filename to a SDF World for gazebo to use" />

    <!-- Robot Customization -->
    <arg name="controller"   default=""       doc="Which example controller should be started?" />
    <arg name="planner"      default=""       doc="Which example planner should be started?" />
    <arg name="x"            default="0"      doc="How far forward to place the base of the robot in [m]?" />
    <arg name="y"            default="0"      doc="How far leftwards to place the base of the robot in [m]?" />
    <arg name="z"            default="0"      doc="How far upwards to place the base of the robot in [m]?" />
    <arg name="roll"         default="0"      doc="How much to rotate the base of the robot around its X-axis in [rad]?" />
    <arg name="pitch"        default="0"      doc="How much to rotate the base of the robot around its Y-axis in [rad]?" />
    <arg name="yaw"          default="0"      doc="How much to rotate the base of the robot around its Z-axis in [rad]?" />
    <arg name="xacro_args"   default=""       doc="Additional arguments to pass to panda.urdf.xacro" />

    <arg name="initial_joint_positions"
             doc="Initial joint configuration of the panda. Specify as a list of name/value pairs in form of '-J [name-of-joint] [value-in-rad]'. Default is a 90 degree bend in the elbow"
             default="-J panda_joint1 0
                                -J panda_joint2 -0.785398163
                                -J panda_joint3 0
                                -J panda_joint4 -2.35619449
                                -J panda_joint5 0
                                -J panda_joint6 1.57079632679
                                -J panda_joint7 0.785398163397
                                -J panda_finger_joint1 0.001
                                -J panda_finger_joint2 0.001
                                "
                                />
    <include file="$(find gazebo_ros)/launch/empty_world.launch" if="$(arg gazebo)">
        <arg name="world_name" value="$(arg world)"/>
        <!-- Always start in paused mode, and only unpause when spawning the model -->
        <arg name="paused" value="true"/>
        <arg name="gui" value="$(eval not arg('headless'))"/>
        <arg name="use_sim_time" value="true"/>
    </include>

    <param
        name="robot_description"
        command="xacro $(find franka_description)/robots/panda/panda.urdf.xacro
                        gazebo:=true
                        hand:=true
                        arm_id:=panda
                        xyz:='$(arg x) $(arg y) $(arg z)'
                        rpy:='$(arg roll) $(arg pitch) $(arg yaw)'
                        $(arg xacro_args)"
    />

    <arg name="arm_id" value="panda"/>
    <rosparam file="$(find franka_gazebo)/config/franka_hw_sim.yaml" subst_value="true" />
    <param name="m_ee" value="0.76"/>
    <arg name="unpause" value="$(eval '' if arg('paused') else '-unpause')"/>

    <node
        name="panda_model_spawner"
        pkg="gazebo_ros"
        type="spawn_model"
        args="-param robot_description -urdf -model panda $(arg unpause) $(arg initial_joint_positions)"
    />

    <!-- Spawn required ROS controllers -->
    <node pkg="controller_manager"
                type="spawner"
                output="screen"
                name="panda_gripper_spawner"
                args="franka_gripper"
                respawn="false"
    />

    <include file="$(find rug_panda_controllers)/launch/controller.launch" if="$(eval arg('controller') != '')">
        <arg name="controller" value="$(arg controller)"/>
    </include>

<!--     <include file="$(find rug_panda_planners)/launch/planner.launch" if="$(eval arg('planner') != '')"> -->
<!--         <arg name="planner" value="$(arg planner)"/> -->
<!--     </include> -->

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher">
        <rosparam param="source_list">[franka_state_controller/joint_states, franka_gripper/joint_states] </rosparam>
        <param name="rate" value="30"/>
    </node>
</launch>